
int sub(vector<int>&nums,int k){
    int l=0, r=0, count=0;
        int n= nums.size();

        unordered_map<int,int> mp;

        while(r<n){
            if(mp[nums[r]]>0){
                mp[nums[r]]++;
            }
            else{
                mp[nums[r]] = 1;
            }

            while(mp.size()>k){
                mp[nums[l]]--;
                if(mp[nums[l]]==0){
                    mp.erase(nums[l]);
                }
                l++;
            }

            count += r-l+1;
            r++;
        }
        return count;
    }
    
class Solution {
public:
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return sub(nums,k) - sub(nums,k-1);
    }
};
