class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string>part;
        partition(s,0,part,ans);
        return ans;
    }

    void partition(string &s,int start,vector<string>&part,vector<vector<string>>&ans){
        if(start==s.length()){
            ans.push_back(part);
            return;
        }

        for(int i=start;i<s.length();i++){
            if(palindrome(s,start,i)){
                part.push_back(s.substr(start,i-start+1));
                partition(s,i+1,part,ans);
                part.pop_back();
            }
        }
    }

    bool palindrome(string&s,int l, int r){
        while(l<r){
            if(s[l++]!=s[r--]){
                return false;
            }
        }
        return true;
    }
};
